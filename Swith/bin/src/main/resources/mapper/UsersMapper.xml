<!-- MembersMapper (myBatis) -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lm.swith.user.mapper.UsersMapper">
	<!-- 회원등록 -->
	<insert id ="insertUser" parameterType="lm.swith.user.model.SwithUser">
		INSERT INTO USERS (EMAIL, PASSWORD, USERNAME, NICKNAME, USER_PROFILE, USERADDRESS, USER_INTRODUCTION )
		VALUES(#{email}, #{password}, #{username}, #{nickname}, #{user_profile}, #{useraddress}, #{user_introduction})
	</insert>
	
	
	<select id="findByEmail" parameterType="lm.swith.user.model.SwithUser">
        SELECT * FROM Users WHERE EMAIL = #{email}
    </select>
    <select id="findByNickname" parameterType="lm.swith.user.model.SwithUser">
        SELECT * FROM Users WHERE NICKNAME = #{nickname}
    </select>
    
	
	
	<select id ="findByEmailAndPassword" parameterType="lm.swith.user.model.SwithUser">
	SELECT * FROM Users WHERE email = #{email} AND PASSWORD = #{password}
	</select>
	
	<select id = "findUserRole" parameterType="lm.swith.user.model.SwithUser">
		SELECT * FROM Users WHERE ROLE = #{role}
	</select>
	<select id = "findUsersAll" parameterType="lm.swith.user.model.SwithUser">
		SELECT * FROM Users
	</select>
	 
	
	<update id = "updateUser" parameterType="lm.swith.user.model.SwithUser">
		UPDATE USERS SET NICKNAME = #{nickname}, USERADDRESS = #{useraddress}, USER_INTRODUCTION = #{user_introduction} WHERE email = #{email}
	</update>
	
	<!--update user profile-->
	<update id = "updateUserProfile" parameterType="lm.swith.user.model.SwithUser">
		UPDATE USERS SET USER_PROFILE=#{user_profile}  WHERE email = #{email}
	</update>
	
	<!--update user password-->
	<update id = "updatePassword" parameterType="lm.swith.user.model.SwithUser">
		UPDATE USERS SET PASSWORD = #{password} WHERE email = #{email}
	</update>
	
	<!-- delete user -->
	<delete id = "deleteUser" parameterType="lm.swith.user.model.SwithUser">
		DELETE FROM USERS WHERE EMAIL = #{email}
	</delete>
	
		<!-- 회원탈퇴용 delete -->
	<delete id="deleteStudyRoomNoticeMy" parameterType="lm.swith.studyroom.model.StudyRoomNotice">
		DELETE FROM STUDY_ROOM_NOTICE WHERE USER_NO = #{user_no}
	</delete>
	
	<delete id="deleteStudyMomentMy" parameterType="lm.swith.studyroom.model.StudyMoment">
		DELETE FROM STUDY_MOMENT WHERE USER_NO = #{user_no}
	</delete>
	
	<select id="findByUserNo" parameterType="lm.swith.user.model.SwithUser">
		SELECT * FROM Users WHERE USER_NO = #{user_no}
	</select>
	
</mapper>